on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

name: rancher-rke-azure

env:
  tf_version: 'latest'
  tf_working_dir: './terraform'
  deployEnvironment: 'dev'

jobs:

############################
# Tests
############################

  test:
    runs-on: ubuntu-latest
    steps:
      - name: "Git: Checkout Repo"
        uses: actions/checkout@v2

      # - name: 'Test: Terraform Format - Command Line'
      #   run: terraform fmt -check -recursive -diff

      - name: 'Terraform: Init'
        uses: hashicorp/terraform-github-actions@v0.8.0
        with:
          tf_actions_subcommand: 'init'
          tf_actions_version: ${{ env.tf_version }}
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: true

      - name: 'Test: Terraform Format'
        uses: hashicorp/terraform-github-actions@v0.8.0
        with:
          tf_actions_subcommand: 'fmt'
          tf_actions_version: ${{ env.tf_version }}
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Test: Terraform Validate'
        uses: hashicorp/terraform-github-actions@v0.8.0
        with:
          tf_actions_subcommand: 'validate'
          tf_actions_version: ${{ env.tf_version }}
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # terraform fmt -check -recursive -diff

############################
# Deploy to Production
############################

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/release/*'
    steps:
      - name: "Git: Checkout Repo"
        uses: actions/checkout@v2

      - name: 'Deploy: Environment Conditional'
        if: github.ref == 'refs/heads/master'
        run: echo "::set-env name=deployEnvironment::prod"

      - name: 'Deploy: Envronment Output'
        run: echo "Deploying into - $deployEnvironment"

      - name: "SecretHub: Export Environment Service Principal"
        uses: secrethub/actions/env-export@v0.1.0
        env:
          SECRETHUB_CREDENTIAL: ${{ secrets.secretHubServiceAccount }}
          ARM_TENANT_ID: secrethub://azure/demo/tenantId
          ARM_CLIENT_ID: secrethub://azure/demo/${{ env.deployEnvironment }}/clientId
          ARM_CLIENT_SECRET: secrethub://azure/demo/${{ env.deployEnvironment }}/clientSecret
          ARM_SUBSCRIPTION_ID: secrethub://azure/demo/${{ env.deployEnvironment }}/subscriptionId

      - name: 'Terraform: Init'
        uses: hashicorp/terraform-github-actions@v0.8.0
        with:
          tf_actions_subcommand: 'init'
          tf_actions_version: ${{ env.tf_version }}
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: true

      - name: 'Terraform: Plan'
        uses: hashicorp/terraform-github-actions@v0.8.0
        with:
          tf_actions_subcommand: 'plan'
          tf_actions_version: ${{ env.tf_version }}
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: true
        env:
          ARM_CLIENT_ID: ${{ env.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ env.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ env.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ env.ARM_TENANT_ID }}

      - name: 'Artifacts: Capture'
        uses: actions/upload-artifact@v2
        if: github.ref == 'refs/heads/develop'
        with:
          name: terraform
          path: '${{ env.tf_working_dir }}/*.tf'
